{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/SEO.js","webpack:///./src/components/PageTitle.js","webpack:///./src/components/Card.js","webpack:///./src/components/CardList.js"],"names":["query","__webpack_exports__","default","_ref","posts","data","allContentfulPost","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_7__","_components_Container__WEBPACK_IMPORTED_MODULE_5__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_6__","small","href","target","rel","_components_CardList__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","post","node","_components_Card__WEBPACK_IMPORTED_MODULE_4__","key","id","slug","image","heroImage","title","date","publishDate","excerpt","body","SEO","render","description","imgWidth","imgHeight","pageUrl","_this$props","this","props","postNode","pagePath","postSEO","pageSEO","customTitle","_utils_siteConfig__WEBPACK_IMPORTED_MODULE_3___default","siteTitle","siteDescription","siteUrl","shareImage","shareImageWidth","shareImageHeight","metaDescription","childMarkdownRemark","internal","content","ogimg","src","width","height","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","author","authorUrl","publisher","datePublished","publishDateISO","mainEntityOfPage","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","userTwitter","react__WEBPACK_IMPORTED_MODULE_1__","Component","u","195","e","t","n","r","Title","b","h1","withConfig","displayName","theme","colors","base","highlight","children","Post","styled_components__WEBPACK_IMPORTED_MODULE_2__","li","secondary","responsive","medium","tertiary","h2","Date","h3","Excerpt","p","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fluid","backgroundColor","dangerouslySetInnerHTML","__html","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","List","ul"],"mappings":"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","file":"component---src-pages-index-js-2efa90407b6963f0e581.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\nimport CardList from '../components/CardList'\r\nimport Card from '../components/Card'\r\nimport Container from '../components/Container'\r\nimport PageTitle from '../components/PageTitle'\r\nimport SEO from '../components/SEO'\r\n\r\nconst Index = ({ data }) => {\r\n  const posts = data.allContentfulPost.edges\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO />\r\n      <Container>\r\n        <PageTitle small>\r\n          <a\r\n            href=\"https://www.gatsbyjs.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Gatsby\r\n          </a>\r\n          ,{' '}\r\n          <a\r\n            href=\"https://www.contentful.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Contentful\r\n          </a>{' '}\r\n          and{' '}\r\n          <a\r\n            href=\"https://www.netlify.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Netlify\r\n          </a>{' '}\r\n          <span>ðŸŽ‰</span>\r\n        </PageTitle>\r\n        <CardList>\r\n          {posts.map(({ node: post }) => (\r\n            <Card\r\n              key={post.id}\r\n              slug={post.slug}\r\n              image={post.heroImage}\r\n              title={post.title}\r\n              date={post.publishDate}\r\n              excerpt={post.body}\r\n            />\r\n          ))}\r\n        </CardList>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allContentfulPost(\r\n      limit: 1000\r\n      sort: { fields: [publishDate], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          title\r\n          id\r\n          slug\r\n          publishDate(formatString: \"MMMM DD, YYYY\")\r\n          heroImage {\r\n            title\r\n            fluid(maxWidth: 1800) {\r\n              ...GatsbyContentfulFluid_withWebp_noBase64\r\n            }\r\n          }\r\n          body {\r\n            childMarkdownRemark {\r\n              html\r\n              excerpt(pruneLength: 80)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Index\r\n","import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport config from '../utils/siteConfig'\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, pagePath, postSEO, pageSEO, customTitle } = this.props\r\n    let title\r\n    let description\r\n    let image\r\n    let imgWidth\r\n    let imgHeight\r\n    let pageUrl\r\n\r\n    // Set Default OpenGraph Parameters for Fallback\r\n    title = config.siteTitle\r\n    description = config.siteDescription\r\n    image = config.siteUrl + config.shareImage\r\n    imgWidth = config.shareImageWidth\r\n    imgHeight = config.shareImageHeight\r\n    pageUrl = config.siteUrl\r\n\r\n    if (customTitle) {\r\n      title = postNode.title\r\n      pageUrl = config.siteUrl + '/' + pagePath + '/'\r\n    }\r\n\r\n    // Replace with Page Parameters if post or page\r\n    if (postSEO || pageSEO) {\r\n      title = postNode.title\r\n      description =\r\n        postNode.metaDescription === null\r\n          ? postNode.body.childMarkdownRemark.excerpt\r\n          : postNode.metaDescription.internal.content\r\n\r\n      pageUrl = config.siteUrl + '/' + pagePath + '/'\r\n    }\r\n    // Use Hero Image for OpenGraph\r\n    if (postSEO) {\r\n      image = 'https:' + postNode.heroImage.ogimg.src\r\n      imgWidth = postNode.heroImage.ogimg.width\r\n      imgHeight = postNode.heroImage.ogimg.height\r\n    }\r\n\r\n    // Default Website Schema\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebSite',\r\n        url: config.siteUrl,\r\n        name: config.siteTitle,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\r\n      },\r\n    ]\r\n\r\n    // Blog Post Schema\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BreadcrumbList',\r\n          itemListElement: [\r\n            {\r\n              '@type': 'ListItem',\r\n              position: 1,\r\n              item: {\r\n                '@id': config.siteUrl,\r\n                name: config.siteTitle,\r\n              },\r\n            },\r\n            {\r\n              '@type': 'ListItem',\r\n              position: 2,\r\n              item: {\r\n                '@id': pageUrl,\r\n                name: title,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BlogPosting',\r\n          url: pageUrl,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\r\n          headline: title,\r\n          image: {\r\n            '@type': 'ImageObject',\r\n            url: image,\r\n            width: imgWidth,\r\n            height: imgHeight,\r\n          },\r\n          author: {\r\n            '@type': 'Person',\r\n            name: config.author,\r\n            url: config.authorUrl,\r\n          },\r\n          publisher: {\r\n            '@type': 'Organization',\r\n            name: config.publisher,\r\n            url: config.siteUrl,\r\n          },\r\n          datePublished: postNode.publishDateISO,\r\n          mainEntityOfPage: pageUrl,\r\n        }\r\n      )\r\n    }\r\n\r\n    // Page SEO Schema\r\n    if (pageSEO) {\r\n      schemaOrgJSONLD.push({\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebPage',\r\n        url: pageUrl,\r\n        name: title,\r\n      })\r\n    }\r\n\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"image\" content={image} />\r\n        <meta name=\"description\" content={description} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:title\" content={title} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n\r\n        <meta property=\"og:url\" content={pageUrl} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta property=\"og:image:width\" content={imgWidth} />\r\n        <meta property=\"og:image:height\" content={imgHeight} />\r\n        <meta property=\"og:description\" content={description} />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : ''}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n      </Helmet>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n  font-size: ${props => (props.small ? '2em' : '3em')};\r\n  text-transform: capitalize;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin: 0 0 3rem 0;\r\n  margin: ${props => (props.small ? '1rem 0 4rem 0' : '0 0 3rem 0')};\r\n  line-height: 1.2;\r\n  span {\r\n    margin: 0 0 0 0.25em;\r\n  }\r\n  a {\r\n    transition: all 0.2s;\r\n    color: ${props => props.theme.colors.base};\r\n    &:hover {\r\n      color: ${props => props.theme.colors.highlight};\r\n    }\r\n  }\r\n`\r\n\r\nconst PageTitle = props => {\r\n  return <Title small={props.small}>{props.children}</Title>\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nconst Post = styled.li`\r\n  border: 1px solid ${props => props.theme.colors.secondary};\r\n  border-radius: 2px;\r\n  margin: 0 0 1em 0;\r\n  width: 100%;\r\n  transition: background 0.2s;\r\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\r\n    flex: 0 0 49%;\r\n    margin: 0 0 2vw 0;\r\n  }\r\n  @media screen and (min-width: ${props => props.theme.responsive.medium}) {\r\n    flex: 0 0 32%;\r\n  }\r\n  &:hover {\r\n    background: ${props => props.theme.colors.tertiary};\r\n  }\r\n  a {\r\n    display: flex;\r\n    flex-flow: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    color: ${props => props.theme.colors.base};\r\n    text-decoration: none;\r\n    .gatsby-image-wrapper {\r\n      height: 0;\r\n      padding-bottom: 60%;\r\n    }\r\n  }\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  margin: 1rem 1rem 0.5rem 1rem;\r\n`\r\n\r\nconst Date = styled.h3`\r\n  margin: 0 1rem 1.5rem 1rem;\r\n  color: gray;\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  margin: 0 1rem 1rem 1rem;\r\n  line-height: 1.6;\r\n`\r\n\r\nconst Card = props => {\r\n  return (\r\n    <Post>\r\n      <Link to={`/${props.slug}/`}>\r\n        <Img fluid={props.image.fluid} backgroundColor={'#eeeeee'} />\r\n        <Title>{props.title}</Title>\r\n        <Date>{props.date}</Date>\r\n        <Excerpt\r\n          dangerouslySetInnerHTML={{\r\n            __html: props.excerpt.childMarkdownRemark.excerpt,\r\n          }}\r\n        />\r\n      </Link>\r\n    </Post>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  &::after {\r\n    content: '';\r\n    flex: 0 0 32%;\r\n  }\r\n`\r\n\r\nconst CardList = props => {\r\n  return <List>{props.children}</List>\r\n}\r\n\r\nexport default CardList\r\n"],"sourceRoot":""}